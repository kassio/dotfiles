#!/usr/bin/env zsh

declare components_path
declare -a components
declare -a only_components
declare -a except_components
declare timestamp_file

_exit() {
  date -j '+%d %b %Y %H:%M' > "${timestamp_file}"
  exit "$1"
}

run() {
  trap '_exit 1' HUP INT QUIT TERM

  clear-buffer

  if [ -f "${timestamp_file}" ]; then
    title "Last run: $(cat "${timestamp_file}").\n"
  fi

  if [ ${#only_components[@]} -gt 0 ]; then
    components=$only_components
  fi

  for component in "${components[@]}"; do
    if (($except_components[(Ie)$component])); then
      continue
    fi

    zsh -c "${components_path}/${component} $@;"
  done

  _exit 0
}

help_base() {
    echo -e "USAGE: srunner --components <components_path> --manifest <manifest> [options]

    srunner => sequential runner
    runs the components from the components_path in the order of the manifest

    Options:
      --only <component>
        Will run only the given component

      --no <component>
        Will skip the component and run all the others.
        This option may be used more than once."
}

parse_args() {
  case "$1" in
    --components|-c)
      shift
      components_path="$1"
      timestamp_file="${HOME}/.cache/last-$(basename $1)-run"
      shift
      parse_args "$@"
      ;;

    --manifest|-m)
      shift
      components=($(cat $1 | xargs))
      shift
      parse_args "$@"
      ;;

    --except)
      shift
      except_components+=($1)
      shift
      parse_args "$@"
      ;;

    --only)
      shift
      only_components+=($1)
      shift
      parse_args "$@"
      ;;

    --help | -h)
      help_base

      if [ ${#components[@]} -gt 0 ]; then
        echo "\nComponents:"
        for component in "${components[@]}"; do
          echo -e "    - $(basename "${component}"): $(${components_path}/${component} --help;)"
        done
      fi
      exit 0
      ;;
  esac
}

if [ $# -lt 2 ]; then
  help_base
  exit 1
fi

parse_args "$@"
run "$@"

echo

_exit 0
