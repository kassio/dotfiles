#!/usr/bin/env bash

labels=""
options=""
title="$(git show --no-patch --format="%s")"

function show_help() {
  echo -e "usage: git mr [OPTIONS] message
  OPTIONS:
  -h                         Print this message
  -t, --title                Define the Merge Request Title.
                             Fallback to the last commit message first line
  -l, --label                Can be used multiple times to add labels to the Merge Request
  -f, --force                Add '--force-with-lease' to the git push
  -F, --force-without-lease  Add '--force' to the git push
  *any git push option       Any other option will be passed to git push
  "
}

function parse_args() {
  case "$1" in
    -h)
      show_help
      exit 0
      ;;
    -f | --force)
      shift 1

      options="$options --force-with-lease"

      parse_args "$@"
      ;;
    -F | --force-without-lease)
      shift 1

      options="$options --force-with-lease"

      parse_args "$@"
      ;;
    -l | --label)
      shift 1

      labels="$labels $1"

      shift 1

      parse_args "$@"
      ;;
    -t | --title)
      shift 1

      title="$1"

      shift 1

      parse_args "$@"
      ;;
    *)
      # All not documented options are passed as git push options
      options="$options $*"
      ;;
  esac
}

parse_args "$@"

command="git push -u $options"
command="$command -o merge_request.create"
command="$command -o merge_request.title='$title'"

for label in $labels; do
  command="$command -o merge_request.label=\"$label\""
done

# echo "$command"
eval "$command"
