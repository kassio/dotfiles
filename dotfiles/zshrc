# Fix to use tmux, rbenv and zsh
if [ -x /usr/libexec/path_helper ]
then
  PATH=""
  eval `/usr/libexec/path_helper -s`
fi

export DOTFILES=$HOME/.dotfiles

# Fix the \eb \ef and others.
export WORDCHARS=''

source $DOTFILES/lib/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $DOTFILES/lib/spectrum.zsh

brew_prefix=`which brew --prefix`
prefix=${brew_prefix:-/usr/local}
brew_completion="$prefix/Library/Contributions/brew_zsh_completion.sh"
if [[ -e $brew_completion ]]
then
  source $brew_completion
fi

# Use emacs key bindings
bindkey -e

## Completions
autoload -U compinit
compinit -C

## case-insensitive (all),partial-word and then substring completion
zstyle ':completion:*' matcher-list \
  'm:{a-zA-Z}={A-Za-z}' \
  'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# do not correct me!!
unsetopt correct_all
unsetopt correct

## History
HISTFILE=$HOME/.zhistory
setopt \
  append_history \
  hist_ignore_dups \
  share_history \
  inc_append_history \
 extended_history
HISTSIZE=1200
SAVEHIST=1000

# colors on autocomplete
autoload -Uz compinit
compinit
zstyle ':completion:*' list-colors $LSCOLORS

# easy regexp on list files
setopt extendedglob

# don't blow up with comments
setopt interactive_comments

__build_prompt() {
  if [ -z "$TMUX_PANE" ]
  then
  __git_ps1 "$FG[004]%~ %f" "
$FG[002]$%f " "(%s)"
  else
    local tmux_info="${TMUX_PANE:+$FG[196][${TMUX_PANE#\%}]}";
    export PS1="${tmux_info}$FG[004]%1~%f$(__git_ps1)$FG[002]$ "
  fi
}

__build_rprompt() {
  local return_code="%(?..$FG[160]%? â†µ)%f";
  export RPS1="${return_code}"
}; __build_rprompt

__prompt_command() {
  __notify_tests_status
  __build_prompt
}
precmd_functions=(__prompt_command)

source $DOTFILES/lib/my_env

# vim:ft=zsh:
